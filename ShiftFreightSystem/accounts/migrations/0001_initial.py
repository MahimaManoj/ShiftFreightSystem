# Generated by Django 4.1.7 on 2023-05-08 08:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import location_field.models.plain


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Home', '0002_companytruck'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=100)),
                ('phone', models.BigIntegerField(default=0, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('address1', models.CharField(default='', max_length=100)),
                ('address2', models.CharField(default='', max_length=100)),
                ('city', models.CharField(default='', max_length=100)),
                ('state', models.CharField(default='', max_length=100)),
                ('district', models.CharField(choices=[('Kozhikode', 'Kozhikode'), ('Malappuram', 'Malappuram'), ('Kannur', 'Kannur'), ('Palakkad', 'Palakkad'), ('Thrissur', 'Thrissur'), ('Kottayam', 'Kottayam'), ('Alappuzha', 'Alappuzha'), ('Idukki', 'Idukki'), ('Kollam', 'Kollam'), ('Ernakulam', 'Ernakulam'), ('Wayanad', 'Wayanad'), ('Kasaragod', 'Kasaragod'), ('Pathanamthitta', 'Pathanamthitta'), ('Thiruvananthapuram', 'Thiruvananthapuram'), ('None', 'None')], default='None', max_length=50)),
                ('pincode', models.BigIntegerField(default=0)),
                ('role', models.CharField(choices=[('is_admin', 'is_admin'), ('is_consignor', 'is_consignor'), ('is_driver', 'is_driver')], max_length=100)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now_add=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_consignor', models.BooleanField(default=False)),
                ('is_driver', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superadmin', models.BooleanField(default=False)),
                ('is_booked', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FuelDetails',
            fields=[
                ('fuel_id', models.AutoField(primary_key=True, serialize=False)),
                ('truck', models.CharField(max_length=50)),
                ('odometer_reading', models.CharField(max_length=6)),
                ('fill_date', models.DateField()),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('comment', models.TextField()),
                ('bill_image', models.ImageField(upload_to='images/fuel_bills/')),
                ('added_driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BTruck',
            fields=[
                ('boo_id', models.AutoField(primary_key=True, serialize=False)),
                ('p_cit', models.CharField(max_length=100)),
                ('p_addres1', models.CharField(max_length=100)),
                ('p_addres2', models.CharField(max_length=100)),
                ('p_distric', models.CharField(max_length=100)),
                ('p_stat', models.CharField(max_length=100)),
                ('p_pincod', models.CharField(max_length=100)),
                ('d_cit', models.CharField(max_length=100)),
                ('d_addres1', models.CharField(max_length=100)),
                ('d_addres2', models.CharField(max_length=100)),
                ('d_distric', models.CharField(max_length=100)),
                ('d_stat', models.CharField(max_length=100)),
                ('d_pincod', models.CharField(max_length=100)),
                ('good_typ', models.CharField(choices=[('Household', 'Household'), ('Beverages', 'Beverages'), ('Paints', 'Paints'), ('Steel', 'Steel'), ('Electronics', 'Electronic'), ('others', 'others'), ('None', 'None')], default='None', max_length=50)),
                ('bookingdat', models.DateTimeField()),
                ('weigh', models.CharField(max_length=100)),
                ('service', models.CharField(choices=[('Loading', 'Loading'), ('Unloading', 'Unloading'), ('Cardboard Packing', 'Cardboard Packing'), ('Storage', 'Storage')], default='None', max_length=50)),
                ('load_descriptio', models.CharField(max_length=100)),
                ('statu', models.CharField(choices=[('Approved', 'Approved'), ('Pending', 'Pending'), ('None', 'None')], default='Pending', max_length=100)),
                ('location', location_field.models.plain.PlainLocationField(max_length=63)),
                ('dr_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='driver', to=settings.AUTH_USER_MODEL)),
                ('us_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consignor', to=settings.AUTH_USER_MODEL)),
                ('veh_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Home.companytruck')),
            ],
        ),
    ]
